
===== TESTING AUTH REQUIRED =====
Testing auth for: companies - /companies/
Testing auth for: contacts - /contacts/
Testing auth for: opportunities - /opportunities/
Testing auth for: tasks - /tasks/
Testing auth for: users - /users/

===== TESTING PAGE LOADS =====
Testing page load: companies - /companies/
Testing page load: contacts - /contacts/
Testing page load: opportunities - /opportunities/
Testing page load: tasks - /tasks/
Testing page load: users - /users/

===== TESTING DATA ENDPOINTS =====

Entity: companies (Company)
Sample DB record (ID: 1):
  capabilities: [<Capability Capability 1>, <Capability Capability 4>]
  created_at: 2025-03-30 01:12:05.057863
  crisp_summary: 2.2
  description: Description of Company 1
  id: 1
  name: Company 1
  updated_at: 2025-03-30 01:12:05.057865
Fields to check in API response: ['name', 'id']
Requesting: /companies/data
Response: 200 application/json
Response format: Object with 'data' array (10 items)
First response item keys: ['created_at', 'description', 'id', 'name', 'updated_at']
  name: Company 1
  id: 1

Entity: contacts (Contact)
Sample DB record (ID: 1):
  company_id: 2
  created_at: 2025-03-30 01:12:05.087643
  crisp_summary: 5.0
  email: contact1@example.com
  first_name: First1
  full_name: First1 Last1
  id: 1
  last_name: Last1
  notes: None
  phone: 0400000001
  updated_at: 2025-03-30 01:12:05.087645
Fields to check in API response: ['first_name', 'last_name', 'email', 'id']
Requesting: /contacts/data
Response: 200 application/json
Response format: Object with 'data' array (10 items)
First response item keys: ['company_id', 'created_at', 'email', 'first_name', 'id', 'last_name', 'phone', 'updated_at']
  first_name: First1
  last_name: Last1
  email: contact1@example.com
  id: 1

Entity: opportunities (Opportunity)
Sample DB record (ID: 1):
  company_id: 2
  created_at: 2025-03-30 01:12:05.191242
  crisp_summary: <Error: 'NoneType' object is not iterable>
  description: A great opportunity
  id: 1
  name: Opportunity 1
  notes: None
  stage: Prospecting
  status: New
  updated_at: 2025-03-30 01:12:05.191243
  value: 46156.0
Fields to check in API response: ['name', 'id']
Requesting: /opportunities/data
Response: 200 application/json
Response format: Object with 'data' array (5 items)
First response item keys: ['company_id', 'created_at', 'description', 'id', 'name', 'stage', 'status', 'updated_at', 'value']
  name: Opportunity 1
  id: 1

Entity: tasks (Task)
Sample DB record (ID: 1):
  created_at: 2025-03-30 01:12:05.203368
  description: Important task
  due_date: 2025-03-31 01:12:05.201338
  id: 1
  notable_id: 1
  notable_type: User
  priority: High
  status: Pending
  title: Task 1
  updated_at: 2025-03-30 01:12:05.203369
Fields to check in API response: ['title', 'id']
Requesting: /tasks/data
Response: 200 application/json
Response format: Object with 'data' array (5 items)
First response item keys: ['created_at', 'description', 'due_date', 'id', 'notable_id', 'notable_type', 'priority', 'status', 'title', 'updated_at']
  title: Task 1
  id: 1

Entity: users (User)
Sample DB record (ID: 1):
  created_at: 2025-03-30 01:03:56.143914
  email: admin@example.com
  id: 1
  is_active: True
  is_admin: True
  is_anonymous: False
  is_authenticated: True
  name: Administrator
  password_hash: pbkdf2:sha256:600000$XqEZaHZTBjBG9ZyA$e9e466ed398705012b8e6da3939330063d0a4ae71316ef333348f5da47baf18c
  updated_at: 2025-03-30 01:12:05.018301
  username: admin
Fields to check in API response: ['name', 'username', 'email', 'id']
Requesting: /users/data
Response: 200 application/json
Response format: Object with 'data' array (7 items)
First response item keys: ['created_at', 'email', 'id', 'is_admin', 'name', 'password_hash', 'updated_at', 'username']
  name: Administrator
  username: admin
  email: admin@example.com
  id: 1

===== TESTING CREATE PAGES =====
Testing: companies (Company) - /companies/create
Testing: contacts (Contact) - /contacts/create
Testing: opportunities (Opportunity) - /opportunities/create
Testing: tasks (Task) - /tasks/create
Testing: users (User) - /users/create

===== TESTING USER INFO IN NAVBAR =====
Expected username: Administrator

===== TESTING COMMON UI COMPONENTS =====

Testing: companies - /companies/

Testing: contacts - /contacts/

Testing: opportunities - /opportunities/

Testing: tasks - /tasks/

Testing: users - /users/

===== TESTING AUTH REQUIRED =====
Testing auth for: companies - /companies/
Testing auth for: contacts - /contacts/
Testing auth for: opportunities - /opportunities/
Testing auth for: tasks - /tasks/
Testing auth for: users - /users/

===== TESTING PAGE LOADS =====
Testing page load: companies - /companies/
Testing page load: contacts - /contacts/
Testing page load: opportunities - /opportunities/
Testing page load: tasks - /tasks/
Testing page load: users - /users/

===== TESTING DATA ENDPOINTS =====

Entity: companies (Company)
Sample DB record (ID: 1):
  capabilities: [<Capability Capability 1>, <Capability Capability 4>]
  created_at: 2025-03-30 01:12:05.057863
  crisp_summary: 2.2
  description: Description of Company 1
  id: 1
  name: Company 1
  updated_at: 2025-03-30 01:12:05.057865
Fields to check in API response: ['name', 'id']
Requesting: /companies/data
Response: 200 application/json
Response format: Object with 'data' array (10 items)
First response item keys: ['created_at', 'description', 'id', 'name', 'updated_at']
  name: Company 1
  id: 1

Entity: contacts (Contact)
Sample DB record (ID: 1):
  company_id: 2
  created_at: 2025-03-30 01:12:05.087643
  crisp_summary: 5.0
  email: contact1@example.com
  first_name: First1
  full_name: First1 Last1
  id: 1
  last_name: Last1
  notes: None
  phone: 0400000001
  updated_at: 2025-03-30 01:12:05.087645
Fields to check in API response: ['first_name', 'last_name', 'email', 'id']
Requesting: /contacts/data
Response: 200 application/json
Response format: Object with 'data' array (10 items)
First response item keys: ['company_id', 'created_at', 'email', 'first_name', 'id', 'last_name', 'phone', 'updated_at']
  first_name: First1
  last_name: Last1
  email: contact1@example.com
  id: 1

Entity: opportunities (Opportunity)
Sample DB record (ID: 1):
  company_id: 2
  created_at: 2025-03-30 01:12:05.191242
  crisp_summary: <Error: 'NoneType' object is not iterable>
  description: A great opportunity
  id: 1
  name: Opportunity 1
  notes: None
  stage: Prospecting
  status: New
  updated_at: 2025-03-30 01:12:05.191243
  value: 46156.0
Fields to check in API response: ['name', 'id']
Requesting: /opportunities/data
Response: 200 application/json
Response format: Object with 'data' array (5 items)
First response item keys: ['company_id', 'created_at', 'description', 'id', 'name', 'stage', 'status', 'updated_at', 'value']
  name: Opportunity 1
  id: 1

Entity: tasks (Task)
Sample DB record (ID: 1):
  created_at: 2025-03-30 01:12:05.203368
  description: Important task
  due_date: 2025-03-31 01:12:05.201338
  id: 1
  notable_id: 1
  notable_type: User
  priority: High
  status: Pending
  title: Task 1
  updated_at: 2025-03-30 01:12:05.203369
Fields to check in API response: ['title', 'id']
Requesting: /tasks/data
Response: 200 application/json
Response format: Object with 'data' array (5 items)
First response item keys: ['created_at', 'description', 'due_date', 'id', 'notable_id', 'notable_type', 'priority', 'status', 'title', 'updated_at']
  title: Task 1
  id: 1

Entity: users (User)
Sample DB record (ID: 1):
  created_at: 2025-03-30 01:03:56.143914
  email: admin@example.com
  id: 1
  is_active: True
  is_admin: True
  is_anonymous: False
  is_authenticated: True
  name: Administrator
  password_hash: pbkdf2:sha256:600000$XqEZaHZTBjBG9ZyA$e9e466ed398705012b8e6da3939330063d0a4ae71316ef333348f5da47baf18c
  updated_at: 2025-03-30 01:12:05.018301
  username: admin
Fields to check in API response: ['name', 'username', 'email', 'id']
Requesting: /users/data
Response: 200 application/json
Response format: Object with 'data' array (7 items)
First response item keys: ['created_at', 'email', 'id', 'is_admin', 'name', 'password_hash', 'updated_at', 'username']
  name: Administrator
  username: admin
  email: admin@example.com
  id: 1

===== TESTING CREATE PAGES =====
Testing: companies (Company) - /companies/create
Testing: contacts (Contact) - /contacts/create
Testing: opportunities (Opportunity) - /opportunities/create
Testing: tasks (Task) - /tasks/create
Testing: users (User) - /users/create

===== TESTING USER INFO IN NAVBAR =====
Expected username: Administrator

===== TESTING COMMON UI COMPONENTS =====

Testing: companies - /companies/

Testing: contacts - /contacts/

Testing: opportunities - /opportunities/

Testing: tasks - /tasks/

Testing: users - /users/

===== TESTING AUTH REQUIRED =====
Testing auth for: companies - /companies/
Testing auth for: contacts - /contacts/
Testing auth for: opportunities - /opportunities/
Testing auth for: tasks - /tasks/
Testing auth for: users - /users/

===== TESTING PAGE LOADS =====
Testing page load: companies - /companies/
Testing page load: contacts - /contacts/
Testing page load: opportunities - /opportunities/
Testing page load: tasks - /tasks/
Testing page load: users - /users/

===== TESTING DATA ENDPOINTS =====

Entity: companies (Company)
Sample DB record (ID: 1):
  capabilities: [<Capability Capability 1>, <Capability Capability 4>]
  created_at: 2025-03-30 01:12:05.057863
  crisp_summary: 2.2
  description: Description of Company 1
  id: 1
  name: Company 1
  updated_at: 2025-03-30 01:12:05.057865
Fields to check in API response: ['name', 'id']
Requesting: /companies/data
Response: 200 application/json
Response format: Object with 'data' array (10 items)
First response item keys: ['created_at', 'description', 'id', 'name', 'updated_at']
  name: Company 1
  id: 1

Entity: contacts (Contact)
Sample DB record (ID: 1):
  company_id: 2
  created_at: 2025-03-30 01:12:05.087643
  crisp_summary: 5.0
  email: contact1@example.com
  first_name: First1
  full_name: First1 Last1
  id: 1
  last_name: Last1
  notes: None
  phone: 0400000001
  updated_at: 2025-03-30 01:12:05.087645
Fields to check in API response: ['first_name', 'last_name', 'email', 'id']
Requesting: /contacts/data
Response: 200 application/json
Response format: Object with 'data' array (10 items)
First response item keys: ['company_id', 'created_at', 'email', 'first_name', 'id', 'last_name', 'phone', 'updated_at']
  first_name: First1
  last_name: Last1
  email: contact1@example.com
  id: 1

Entity: opportunities (Opportunity)
Sample DB record (ID: 1):
  company_id: 2
  created_at: 2025-03-30 01:12:05.191242
  crisp_summary: <Error: 'NoneType' object is not iterable>
  description: A great opportunity
  id: 1
  name: Opportunity 1
  notes: None
  stage: Prospecting
  status: New
  updated_at: 2025-03-30 01:12:05.191243
  value: 46156.0
Fields to check in API response: ['name', 'id']
Requesting: /opportunities/data
Response: 200 application/json
Response format: Object with 'data' array (5 items)
First response item keys: ['company_id', 'created_at', 'description', 'id', 'name', 'stage', 'status', 'updated_at', 'value']
  name: Opportunity 1
  id: 1

Entity: tasks (Task)
Sample DB record (ID: 1):
  created_at: 2025-03-30 01:12:05.203368
  description: Important task
  due_date: 2025-03-31 01:12:05.201338
  id: 1
  notable_id: 1
  notable_type: User
  priority: High
  status: Pending
  title: Task 1
  updated_at: 2025-03-30 01:12:05.203369
Fields to check in API response: ['title', 'id']
Requesting: /tasks/data
Response: 200 application/json
Response format: Object with 'data' array (5 items)
First response item keys: ['created_at', 'description', 'due_date', 'id', 'notable_id', 'notable_type', 'priority', 'status', 'title', 'updated_at']
  title: Task 1
  id: 1

Entity: users (User)
Sample DB record (ID: 1):
  created_at: 2025-03-30 01:03:56.143914
  email: admin@example.com
  id: 1
  is_active: True
  is_admin: True
  is_anonymous: False
  is_authenticated: True
  name: Administrator
  password_hash: pbkdf2:sha256:600000$XqEZaHZTBjBG9ZyA$e9e466ed398705012b8e6da3939330063d0a4ae71316ef333348f5da47baf18c
  updated_at: 2025-03-30 01:12:05.018301
  username: admin
Fields to check in API response: ['name', 'username', 'email', 'id']
Requesting: /users/data
Response: 200 application/json
Response format: Object with 'data' array (7 items)
First response item keys: ['created_at', 'email', 'id', 'is_admin', 'name', 'password_hash', 'updated_at', 'username']
  name: Administrator
  username: admin
  email: admin@example.com
  id: 1

===== TESTING CREATE PAGES =====
Testing: companies (Company) - /companies/create
Testing: contacts (Contact) - /contacts/create
Testing: opportunities (Opportunity) - /opportunities/create
Testing: tasks (Task) - /tasks/create
Testing: users (User) - /users/create

===== TESTING USER INFO IN NAVBAR =====
Expected username: Administrator

===== TESTING COMMON UI COMPONENTS =====

Testing: companies - /companies/

Testing: contacts - /contacts/

Testing: opportunities - /opportunities/

Testing: tasks - /tasks/

Testing: users - /users/

===== TESTING AUTH REQUIRED =====
Testing auth for: companies - /companies/
Testing auth for: contacts - /contacts/
Testing auth for: opportunities - /opportunities/
Testing auth for: tasks - /tasks/
Testing auth for: users - /users/

===== TESTING PAGE LOADS =====
Testing page load: companies - /companies/
Testing page load: contacts - /contacts/
Testing page load: opportunities - /opportunities/
Testing page load: tasks - /tasks/
Testing page load: users - /users/

===== TESTING DATA ENDPOINTS =====

Entity: companies (Company)
Sample DB record (ID: 1):
  capabilities: [<Capability Capability 1>, <Capability Capability 4>]
  created_at: 2025-03-30 01:12:05.057863
  crisp_summary: 2.2
  description: Description of Company 1
  id: 1
  name: Company 1
  updated_at: 2025-03-30 01:12:05.057865
Fields to check in API response: ['name', 'id']
Requesting: /companies/data
Response: 200 application/json
Response format: Object with 'data' array (10 items)
First response item keys: ['created_at', 'description', 'id', 'name', 'updated_at']
  name: Company 1
  id: 1

Entity: contacts (Contact)
Sample DB record (ID: 1):
  company_id: 2
  created_at: 2025-03-30 01:12:05.087643
  crisp_summary: 5.0
  email: contact1@example.com
  first_name: First1
  full_name: First1 Last1
  id: 1
  last_name: Last1
  notes: None
  phone: 0400000001
  updated_at: 2025-03-30 01:12:05.087645
Fields to check in API response: ['first_name', 'last_name', 'email', 'id']
Requesting: /contacts/data
Response: 200 application/json
Response format: Object with 'data' array (10 items)
First response item keys: ['company_id', 'created_at', 'email', 'first_name', 'id', 'last_name', 'phone', 'updated_at']
  first_name: First1
  last_name: Last1
  email: contact1@example.com
  id: 1

Entity: opportunities (Opportunity)
Sample DB record (ID: 1):
  company_id: 2
  created_at: 2025-03-30 01:12:05.191242
  crisp_summary: <Error: 'NoneType' object is not iterable>
  description: A great opportunity
  id: 1
  name: Opportunity 1
  notes: None
  stage: Prospecting
  status: New
  updated_at: 2025-03-30 01:12:05.191243
  value: 46156.0
Fields to check in API response: ['name', 'id']
Requesting: /opportunities/data
Response: 200 application/json
Response format: Object with 'data' array (5 items)
First response item keys: ['company_id', 'created_at', 'description', 'id', 'name', 'stage', 'status', 'updated_at', 'value']
  name: Opportunity 1
  id: 1

Entity: tasks (Task)
Sample DB record (ID: 1):
  created_at: 2025-03-30 01:12:05.203368
  description: Important task
  due_date: 2025-03-31 01:12:05.201338
  id: 1
  notable_id: 1
  notable_type: User
  priority: High
  status: Pending
  title: Task 1
  updated_at: 2025-03-30 01:12:05.203369
Fields to check in API response: ['title', 'id']
Requesting: /tasks/data
Response: 200 application/json
Response format: Object with 'data' array (5 items)
First response item keys: ['created_at', 'description', 'due_date', 'id', 'notable_id', 'notable_type', 'priority', 'status', 'title', 'updated_at']
  title: Task 1
  id: 1

Entity: users (User)
Sample DB record (ID: 1):
  created_at: 2025-03-30 01:03:56.143914
  email: admin@example.com
  id: 1
  is_active: True
  is_admin: True
  is_anonymous: False
  is_authenticated: True
  name: Administrator
  password_hash: pbkdf2:sha256:600000$XqEZaHZTBjBG9ZyA$e9e466ed398705012b8e6da3939330063d0a4ae71316ef333348f5da47baf18c
  updated_at: 2025-03-30 01:12:05.018301
  username: admin
Fields to check in API response: ['name', 'username', 'email', 'id']
Requesting: /users/data
Response: 200 application/json
Response format: Object with 'data' array (7 items)
First response item keys: ['created_at', 'email', 'id', 'is_admin', 'name', 'password_hash', 'updated_at', 'username']
  name: Administrator
  username: admin
  email: admin@example.com
  id: 1

===== TESTING CREATE PAGES =====
Testing: companies (Company) - /companies/create
Testing: contacts (Contact) - /contacts/create
Testing: opportunities (Opportunity) - /opportunities/create
Testing: tasks (Task) - /tasks/create
Testing: users (User) - /users/create

===== TESTING USER INFO IN NAVBAR =====
Expected username: Administrator

===== TESTING COMMON UI COMPONENTS =====

Testing: companies - /companies/

Testing: contacts - /contacts/

Testing: opportunities - /opportunities/

Testing: tasks - /tasks/

Testing: users - /users/
